{
  "hash": "6ca498118ba02f42ddc2f24b93d85edc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Explore Data\"\n---\n\n\n\n\n\n\n\n\n\n## Data\n\nSite information\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsiteinfo <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Data/EcoDrought_SiteInformation.csv\")\nsiteinfo_sp <- st_as_sf(siteinfo, coords = c(\"long\", \"lat\"), crs = 4326)\n```\n:::\n\n\n\n\n\n\nLittle g's\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_clean <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/LittleG_data_clean.csv\")\n```\n:::\n\n\n\n\n\n\nBig G's\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_clean_big <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Qualitative/BigG_data_clean.csv\")\n```\n:::\n\n\n\n\n\n\nWatersheds (filter to Snake River only)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsheds_list <- list()\nmyfiles <- list.files(path = \"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Watershed Delineation/Watersheds/\", pattern = \".shp\")\nfor (i in 1:length(myfiles)) {\n  sheds_list[[i]] <- st_read(paste(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Watershed Delineation/Watersheds/\", myfiles[i], sep = \"\"))\n}\nsheds <- do.call(rbind, sheds_list) %>% \n  mutate(site_id = ifelse(site_id == \"SP01\", \"SP07\", ifelse(site_id == \"SP07\", \"SP01\", site_id))) %>%\n  left_join(siteinfo) %>%\n  filter(basin == \"Snake River\")\n\nsheds <- vect(st_transform(sheds, crs = crs(siteinfo_sp)))\n#mapview(sheds %>% arrange(desc(area_sqmi)), alpha.regions = 0.2)\n```\n:::\n\n\n\n\n\n\nSpring prevalence (Snake only)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspringprev <- rast(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Data/Snake Groundwater/SpringPrev_UpperSnake_BedSurf_nolakes_flowbuff100.tif\")\n#plot(springprev)\n```\n:::\n\n\n\n\n\n\nDiel PASTA derived parameters (for EcoDrought sites) - summarize as July-September site-specific means:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasta <- read_csv(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Covariates/pasta_derived_parameters_daily.csv\") %>%\n  mutate(Month = month(date)) %>%\n  rename(CalendarYear = year) %>%\n  filter(Month %in% c(7:9)) %>%\n  group_by(site_name, CalendarYear) %>%\n  summarize(meanRatio = mean(meanRatio, na.rm = TRUE),\n            phaseLag = mean(phaseLag, na.rm = TRUE),\n            amplitudeRatio = mean(amplitudeRatio, na.rm = TRUE)) %>%\n  ungroup()\npasta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 432 × 5\n   site_name      CalendarYear meanRatio phaseLag amplitudeRatio\n   <chr>                 <dbl>     <dbl>    <dbl>          <dbl>\n 1 Avery Brook            2020     0.886     1.48          0.230\n 2 Avery Brook            2021     0.904     2.89          0.290\n 3 Avery Brook            2022     0.876     1.68          0.208\n 4 Avery Brook            2023     0.903     3.21          0.332\n 5 Avery Brook            2024     0.855     2.26          0.243\n 6 BigCreekLower          2017     1.29      1.81          0.396\n 7 BigCreekLower          2018     0.826     2.43          0.313\n 8 BigCreekLower          2019     1.06      2.45          0.383\n 9 BigCreekLower          2020     0.868     1.85          0.428\n10 BigCreekMiddle         2018     0.933     1.20          0.338\n# ℹ 422 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n## Flow by PASTA\n\nCreate plotting function\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdaystib <- tibble(Month = c(1:12), mdays = c(31,28,31,30,31,30,31,31,30,31,30,31))\n\ngwflowfun <- function (subbas, years, dropsites, months = c(7:9)) {\n  dat_clean %>% \n  filter(subbasin == subbas, CalendarYear %in% years, Month %in% months) %>%\n  group_by(site_name, subbasin, designation, CalendarYear) %>% #, Month, MonthName) %>%\n  summarise(ss = n(),\n            logYield = mean(logYield, na.rm = TRUE)) %>%\n  ungroup() %>%\n  #left_join(mdaystib) %>%\n  mutate(pdays = ss/92#,\n         #YearMonth = paste(CalendarYear, \"_\", Month, sep = \"\")\n         ) %>%\n  filter(pdays > 0.9,\n         !site_name %in% dropsites) %>%\n  group_by(CalendarYear) %>%\n  #mutate(z_logYield = scale(logYield, center = TRUE, scale = TRUE)[,1]) %>%\n  ungroup() %>%\n  left_join(pasta) %>%\n  ggplot(aes(x = amplitudeRatio, y = logYield)) +\n  geom_abline(intercept = 0, slope = 0, linetype = 2) +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  geom_point(aes(color = site_name)) +\n  facet_wrap(~CalendarYear, nrow = 1) +\n  #facet_wrap2(~CalendarYear, nrow = 1, ncol = 5, trim_blank = FALSE) +\n  #facet_grid(cols = vars(Month), rows = vars(CalendarYear)) + \n  theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) \n}\n```\n:::\n\n\n\n\n\n\nGet unique basins\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(dat_clean$basin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"West Brook\"     \"Paine Run\"      \"Staunton River\" \"Flathead\"      \n[5] \"Snake River\"    \"Shields River\"  \"Donner Blitzen\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\nPlot the relationship between annual summer mean discharge and amplitude ratio from PASTA, where lower amplitude ratio values are indicative of greater groundwater availability. Mean flow for each site is standardized by year to remove interannual variation in climate/regional water availability\n\n::: panel-tabset\n#### West Brook\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwflowfun(subbas = \"West Brook\", dropsites = c(\"Mitchell Brook\"), years = c(2020:2024))\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n#### Staunton River\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwflowfun(subbas = \"Staunton River\", dropsites = NA, years = c(2019:2021))\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\n#### Snake River\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwflowfun(subbas = \"Snake River\", dropsites = NA, years = c(2018, 2020:2022), months = c(7:9))\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n\n#### Shields River\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwflowfun(subbas = \"Shields River\", dropsites = NA, years = c(2017,2019,2020,2022,2023), months = c(7:9))\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n\n:::\n\n\n\n## Flow by GWI\n\n### Visualize GW metrics\n\nLoad spatially explicity groundwater indices for the entire Snake River basin\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspringprev_cont <- vect(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/Data/Snake Groundwater/GroundwaterMetrics_Normalized_PredPoints.shp\")\n```\n:::\n\n\n\n\n\n\nPlot groundwater spring prevalence across upper Snake River basin, *springprev_point*: spring prevalence value (10mx10m cell) every 300 m along the entire spring network (too large to plot interactive maps in Quarto)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapview(st_as_sf(springprev_cont), zcol = \"springpre0\", col.regions = colorRampPalette(rev(magma(12))), alpha.regions = 1)\n```\n:::\n\n\n\n\n\n\nPlot inverse distance weighted (5 km decay) groundwater index across upper Snake River basin, *springprev_iew05km*: mean spring prevalence within contributing catchment, inverse distance weighted with 5 km decay, every 300 m along the entire spring network (too large to plot interactive maps in Quarto)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapview(st_as_sf(springprev_cont), zcol = \"springpre3\", col.regions = colorRampPalette(rev(viridis(12))), alpha.regions = 1)\n```\n:::\n\n\n\n\n\n\nPlot groundwater metrics across the Spread Creek sub-basin\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsheds <- terra::project(sheds, crs(springprev_cont))\n\nspringprev_cont_snake <- mask(crop(springprev_cont, sheds[sheds$site_name == \"Spread Creek Dam\",]), sheds[sheds$site_name == \"Spread Creek Dam\",])\n\nmynet <- vect(\"C:/Users/jbaldock/OneDrive - DOI/Documents/USGS/EcoDrought/EcoDrought Working/EcoDrought-Analysis/Watershed Delineation/Streams/Snake_Streams.shp\")\ncrs(mynet) <- crs(siteinfo_sp)\nmynet <- terra::project(mynet, crs(sheds))\nmynet <- crop(mynet, sheds[sheds$site_name == \"Spread Creek Dam\",])\n\n# convert to SpatVectors\nsites_flow <- vect(siteinfo_sp %>% filter(basin == \"Snake River\"))\n# sheds <- vect(sheds)\n\n# transform\nsites_flow <- terra::project(sites_flow, crs(springprev))\nsheds <- terra::project(sheds, crs(springprev))\n```\n:::\n\n\n\n\n\n\nPoint-wise spring prevalence\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = st_as_sf(sheds[sheds$site_name == \"Spread Creek Dam\",]), color = \"black\", fill = \"white\", linewidth = 0.4) + \n  geom_sf(data = st_as_sf(mynet), color = \"white\", linewidth = 1, lineend = \"round\") +\n  geom_sf(data = st_as_sf(mynet), color = \"royalblue4\", linewidth = 0.6, lineend = \"round\") +\n  geom_sf(data = st_as_sf(springprev_cont_snake), aes(colour = springpre0), size = 2) +\n  scale_colour_viridis(option = \"A\", direction = -1, limits = range(springprev_cont_snake$springpre0), na.value = \"grey\") +\n  geom_sf(data = st_as_sf(sites_flow) %>% filter(designation != \"big\"), shape = 21, fill = \"white\", size = 2) +\n  labs(colour = \"Spring\\nprevalence\\n(point)\") + #annotation_scale() +\n  theme_bw() + theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text = element_blank()) \n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nGroundwater index (IEW-5km)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = st_as_sf(sheds[sheds$site_name == \"Spread Creek Dam\",]), color = \"black\", fill = \"white\", linewidth = 0.4) + \n  geom_sf(data = st_as_sf(mynet), color = \"white\", linewidth = 1, lineend = \"round\") +\n  geom_sf(data = st_as_sf(mynet), color = \"royalblue4\", linewidth = 0.6, lineend = \"round\") +\n  geom_sf(data = st_as_sf(springprev_cont_snake), aes(colour = springpre3), size = 2) +\n  scale_colour_viridis(option = \"D\", direction = -1, limits = range(springprev_cont_snake$springpre3), na.value = \"grey\") +\n  geom_sf(data = st_as_sf(sites_flow) %>% filter(designation != \"big\"), shape = 21, fill = \"white\", size = 2) +\n  labs(colour = \"GW index\\n(IEW-5km)\") + #annotation_scale() +\n  theme_bw() + theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text = element_blank()) \n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n### Get GWI for EcoD sites\n\nExtract groundwater metrics from MaxEnt spring prevalence model, for the EcoDrought sites\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# extract average and weighted spring prevalence for each basin\nsites <- sheds$site_name\ngwlist <- list()\nst <- Sys.time()\nfor (i in 1:length(sites)) {\n  spring_mask <- mask(crop(springprev, sheds[sheds$site_name == sites[i],]), sheds[sheds$site_name == sites[i],]) # crop and mask by basin\n  dist_rast <- distance(spring_mask, sites_flow[sites_flow$site_name == sites[i],]) %>% mask(spring_mask) # calculate distance between each raster cell and site location\n  gwlist[[i]] <- tibble(site_name = sites[i],\n                        area_sqmi = sites_flow$area_sqmi[i],\n                        springprev_point = terra::extract(springprev, sites_flow[sites_flow$site_name == sites[i],], na.rm = TRUE)[,2],\n                        springprev_basinmean = as.numeric(global(spring_mask, \"mean\", na.rm = T)), # extract(spring_buff, sheds_yoy[sheds_yoy$site == sites[i],], fun = mean, na.rm = TRUE)[,2],\n                        springprev_iew01km = as.numeric(global(spring_mask * (1 / exp(dist_rast/1000)), \"sum\", na.rm = T) / global(1 / exp(dist_rast/1000), \"sum\", na.rm = T)),\n                        springprev_iew05km = as.numeric(global(spring_mask * (1 / exp(dist_rast/5000)), \"sum\", na.rm = T) / global(1 / exp(dist_rast/5000), \"sum\", na.rm = T))\n                        )\n  print(i)\n}\nSys.time() - st\ngwmetrics_snake <- do.call(rbind, gwlist) # bind as tibble\n```\n:::\n\n\n\n\n\n\nView groundwater metrics for the EcoDrought sites:\n\n* *springprev_point*: spring prevalence value at the monitoring location (10mx10m cell)\n* *springprev_basinmean*: mean spring prevalence within the contributing catchment\n* *springprev_iew01km*: mean spring prevalence within contributing catchment, inverse distance weighted with 1 km decay \n* *springprev_iew05km*: mean spring prevalence within contributing catchment, inverse distance weighted with 5 km decay\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(gwmetrics_snake %>% mutate(across(where(is.numeric), ~ round(., 3))))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-b0b2b90e24c40cfe6d39\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b0b2b90e24c40cfe6d39\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\"],[\"NF Spread Creek Upper\",\"Grouse Creek\",\"Leidy Creek Lower\",\"Leidy Creek Upper\",\"Leidy Creek Mouth\",\"NF Spread Creek Lower\",\"Grizzly Creek\",\"Rock Creek\",\"SF Spread Creek Lower\",\"SF Spread Creek Upper\",\"Spread Creek Dam\",\"Pacific Creek at Moran NWIS\",\"Leidy Creek Mouth NWIS\",\"SF Spread Creek Lower NWIS\"],[12.682,5.151,5.172,2.182,5.159,27.93,3.68,4.741,44.256,35.061,97.49299999999999,166.016,5.169,44.242],[0.044,0.008999999999999999,0.008999999999999999,0.031,0.018,0.036,0.038,0.017,0.028,0.004,0.039,0.077,0.006,0.019],[0.05,0.014,0.032,0.05,0.032,0.04,0.038,0.007,0.022,0.024,0.029,0.027,0.032,0.022],[0.057,0.01,0.034,0.048,0.037,0.022,0.033,0.008,0.012,0.025,0.012,0.044,0.035,0.012],[0.052,0.013,0.031,0.05,0.032,0.035,0.037,0.007,0.02,0.024,0.023,0.033,0.031,0.02]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>site_name<\\/th>\\n      <th>area_sqmi<\\/th>\\n      <th>springprev_point<\\/th>\\n      <th>springprev_basinmean<\\/th>\\n      <th>springprev_iew01km<\\/th>\\n      <th>springprev_iew05km<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"site_name\",\"targets\":1},{\"name\":\"area_sqmi\",\"targets\":2},{\"name\":\"springprev_point\",\"targets\":3},{\"name\":\"springprev_basinmean\",\"targets\":4},{\"name\":\"springprev_iew01km\",\"targets\":5},{\"name\":\"springprev_iew05km\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\n### Flow by GWI\n\n\nPlot relationship between groundwater availability and mean summer log(specific discharge). \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_summer <- dat_clean %>% \n  filter(basin == \"Snake River\", Month %in% c(7:9)) %>%\n  group_by(site_name, basin, designation, WaterYear) %>% #, Month, MonthName) %>%\n  summarise(ndays = n(),\n            logYield_mean = mean(logYield, na.rm = TRUE),\n            logYield_min = min(logYield, na.rm = TRUE)) %>%\n  ungroup() %>%\n  mutate(pdays = ndays/92) %>%\n  filter(pdays > 0.9) %>%\n  left_join(gwmetrics_snake) #%>%\n  #left_join(wateravail %>% filter(basin == \"Snake River\") %>% select(WaterYear, totalyield_sum, totalyield_sum_z))\n\n#summary(lm(logYield_mean ~ springprev_iew05km*totalyield_sum, data = dat_summer))\n\ndat_summer %>%\n  #filter(site_name != \"Grizzly Creek\") %>%\n  #filter(WaterYear %in% c(2020:2023)) %>%\n  ggplot(aes(x = springprev_iew05km, y = logYield_mean)) +\n  geom_smooth(method = \"lm\", aes(x = springprev_iew05km, y = logYield_mean), se = FALSE, color = \"grey50\") + \n  geom_point(aes(color = site_name)) + \n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Groundwater index (IEW-5km)\") + ylab(\"Mean summer log(specific discharge)\") +\n  facet_wrap(~WaterYear)\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndat_summer %>%\n  filter(WaterYear %in% c(2020:2023)) %>%\n  ggplot(aes(x = springprev_iew05km, y = logYield_mean)) +\n  geom_smooth(method = \"lm\", aes(x = springprev_iew05km, y = logYield_mean), se = FALSE, color = \"grey50\") + \n  geom_point(aes(color = site_name, shape = factor(WaterYear))) + \n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Groundwater index (IEW-5km)\") + ylab(\"Mean summer log(specific discharge)\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-22-2.png){width=672}\n:::\n:::\n\n\n\n\n\n\nWith the exception of Grizzly Creek, there is a surprisingly tight relationship between the groundwater index and summer streamflow: higher water availability (specific discharge) in reaches with high groundwater availability. Not surprising, but it's a very nice validation of the MaxEnt approach to estimating groundwater availability and links to summer habitat conditions (e.g., drought refugia). \n\nGrizzly is the exception: high groundwater index despite very low flows. I've never been there, so I'm wondering what Robert makes of this. One thought I had is that where discharge is measured may be out on an alluvial fan, which may be in a losing reach as water spread outs into more porous material. We built the groundwater model to estimate the prevalence of springs, not where water is lost to the subsurface. So the groundwater index would not reflect these more nuanced dynamics. Alternatively (or additionally), looking at satellite imagery, there is a large beaver complex just upstream of the discharge monitoring site...which may reduce surface flows immediately downstream as shallow sediments are recharged. Scanning satellite imagery, it is pretty clear where springs discharge in the headwaters of Grizzly Creek. So, the MaxEnt model may not necessarily be wrong, but it doesn't account for other factors which have important effects on streamflow at even finer spatial scales.\n\n\n## PASTA by GWI\n\n### Groundwater index\n\n::: panel-tabset\n\n#### Amplitude ratio\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasta %>% left_join(gwmetrics_snake) %>% \n  filter(!is.na(springprev_point), CalendarYear %in% c(2013:2023)) %>%\n  ggplot(aes(x = springprev_iew05km, y = amplitudeRatio)) +\n  geom_point(aes(color = site_name)) +\n  facet_wrap(~CalendarYear) +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Groundwater index (IEW-5km)\") + ylab(\"Amplitude ratio\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Phase lag\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasta %>% left_join(gwmetrics_snake) %>% \n  filter(!is.na(springprev_point), CalendarYear %in% c(2013:2023)) %>%\n  ggplot(aes(x = springprev_iew05km, y = phaseLag)) +\n  geom_point(aes(color = site_name)) +\n  facet_wrap(~CalendarYear) +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Groundwater index (IEW-5km)\") + ylab(\"Phase lag\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Mean ratio\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasta %>% left_join(gwmetrics_snake) %>% \n  filter(!is.na(springprev_point), CalendarYear %in% c(2013:2023)) %>%\n  ggplot(aes(x = springprev_iew05km, y = meanRatio)) +\n  geom_point(aes(color = site_name)) +\n  facet_wrap(~CalendarYear) +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Groundwater index (IEW-5km)\") + ylab(\"Mean ratio\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n:::\n\n\n### Spring prevalence\n\n::: panel-tabset\n\n#### Amplitude ratio\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasta %>% left_join(gwmetrics_snake) %>% \n  filter(!is.na(springprev_point), CalendarYear %in% c(2013:2023)) %>%\n  ggplot(aes(x = springprev_point, y = amplitudeRatio)) +\n  geom_point(aes(color = site_name)) +\n  facet_wrap(~CalendarYear) +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Spring prevalence\") + ylab(\"Amplitude ratio\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Phase lag\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasta %>% left_join(gwmetrics_snake) %>% \n  filter(!is.na(springprev_point), CalendarYear %in% c(2013:2023)) %>%\n  ggplot(aes(x = springprev_point, y = phaseLag)) +\n  geom_point(aes(color = site_name)) +\n  facet_wrap(~CalendarYear) +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Spring prevalence\") + ylab(\"Phase lag\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Mean ratio\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasta %>% left_join(gwmetrics_snake) %>% \n  filter(!is.na(springprev_point), CalendarYear %in% c(2013:2023)) %>%\n  ggplot(aes(x = springprev_point, y = meanRatio)) +\n  geom_point(aes(color = site_name)) +\n  facet_wrap(~CalendarYear) +\n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Spring prevalence\") + ylab(\"Mean ratio\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}